name: Simple Build

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - "docs/**"
      - "README*.md"
      - "*.md"

jobs:
  # 简单的Linux构建测试
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            cmake \
            curl \
            git \
            libgtk-3-dev \
            libpam0g-dev \
            libasound2-dev \
            pkg-config

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (cargo check only)
        run: |
          # 简单的检查构建，不需要完整编译
          cargo check --workspace
          echo "✅ Basic Rust compilation check passed"

  # 简单的Windows构建测试
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (cargo check only)
        run: |
          # 简单的检查构建，不需要完整编译
          cargo check --workspace
          echo "✅ Basic Rust compilation check passed"

  # 简单的macOS构建测试
  build-macos:
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (cargo check only)
        run: |
          # 简单的检查构建，不需要完整编译
          cargo check --workspace
          echo "✅ Basic Rust compilation check passed"

  # 创建简单的Release
  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Create nightly release
        run: |
          echo "🎉 All basic builds passed!"
          echo "📦 Ready for full compilation when needed"
          echo "🚀 This is a simplified build for testing purposes"