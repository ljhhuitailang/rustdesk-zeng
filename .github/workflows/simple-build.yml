name: Build Simple Release (No Cache)

on:
  workflow_dispatch:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly"

env:
  FLUTTER_VERSION: "3.24.5"
  RUST_VERSION: "1.75"
  VERSION: "1.0.2"
  TAG_NAME: "${{ inputs.upload-tag }}"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"

jobs:
  build-bridge:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install prerequisites
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake curl gcc git g++ nasm ninja-build pkg-config

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Install flutter rust bridge deps
        run: |
          cargo install cargo-expand --version 1.0.95 --locked
          cargo install flutter_rust_bridge_codegen --version 1.80.1 --features "uuid" --locked
          pushd flutter && sed -i -e 's/extended_text: 14.0.0/extended_text: 13.0.0/g' pubspec.yaml && flutter pub get && popd

      - name: Run flutter rust bridge
        run: |
          ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart --c-output ./flutter/macos/Runner/bridge_generated.h
          cp ./flutter/macos/Runner/bridge_generated.h ./flutter/ios/Runner/bridge_generated.h

      - name: Upload bridge artifacts
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact
          path: |
            ./src/bridge_generated.rs
            ./src/bridge_generated.io.rs
            ./flutter/lib/generated_bridge.dart
            ./flutter/lib/generated_bridge.freezed.dart
            ./flutter/macos/Runner/bridge_generated.h
            ./flutter/ios/Runner/bridge_generated.h

  build-windows:
    name: Windows x64
    needs: [build-bridge]
    runs-on: windows-2022
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15.0.6"

      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - name: Install dependencies with vcpkg (no cache)
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg-temp
          cd C:\vcpkg-temp
          git checkout 120deac3062162151622ca4860575a33844ba10b
          .\bootstrap-vcpkg.bat
          .\vcpkg install --triplet x64-windows-static
        shell: cmd

      - name: Build rustdesk
        env:
          VCPKG_ROOT: C:\vcpkg-temp
        run: |
          $env:VCPKG_ROOT = "C:\vcpkg-temp"
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

      - name: Build self-extracted executable
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          pushd ./libs/portable
          pip3 install -r requirements.txt
          python3 ./generate.py -f ../../rustdesk/ -o . -e ../../rustdesk/rustdesk.exe
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe ./SignOutput/rustdesk-${{ env.VERSION }}-x86_64.exe

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: ./SignOutput/rustdesk-*.exe

  build-linux:
    name: Linux x64
    needs: [build-bridge]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc \
               git \
               g++ \
               libayatana-appindicator3-dev \
               libasound2-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               nasm \
               ninja-build \
               pkg-config \
               python3 \
               rpm \
               wget

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-unknown-linux-gnu
          components: "rustfmt"

      - name: Install dependencies with vcpkg (no cache)
        run: |
          git clone https://github.com/Microsoft/vcpkg.git /opt/vcpkg-temp
          cd /opt/vcpkg-temp
          git checkout 120deac3062162151622ca4860575a33844ba10b
          ./bootstrap-vcpkg.sh
          ./vcpkg install --triplet x64-linux

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Build rustdesk
        env:
          VCPKG_ROOT: /opt/vcpkg-temp
        run: |
          cargo build --lib --features hwcodec,flutter,unix-file-copy-paste --release
          export DEB_ARCH=amd64
          python3 ./build.py --flutter --skip-cargo

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: rustdesk-*.deb

  build-android:
    name: Android ARM64
    needs: [build-bridge]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang cmake curl gcc git g++ nasm ninja-build \
               openjdk-17-jdk-headless pkg-config wget

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: "r27c"
          add-to-path: true

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - name: Build rustdesk lib
        run: |
          rustup target add aarch64-linux-android
          cargo install cargo-ndk --version 3.1.2 --locked
          ./flutter/ndk_arm64.sh
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ./target/aarch64-linux-android/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/

      - name: Build rustdesk
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          pushd flutter
          flutter build apk --release --target-platform android-arm64 --split-per-abi
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk ../rustdesk-${{ env.VERSION }}-aarch64.apk
          popd

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: rustdesk-*.apk